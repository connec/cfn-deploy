name: Release

on:
  release:
    types: published

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: publish
          args: --no-verify
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

  binaries:
    strategy:
      fail-fast: false
      matrix:
        arch: [aarch64, x86_64]
        os: [apple-darwin, unknown-linux-gnu]
    name: Build binary (${{ matrix.os }} ${{ matrix.arch }})
    runs-on: ubuntu-latest
    env:
      SDK_VERSION: '12.3'
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: ${{ matrix.arch }}-${{ matrix.os }}
      - name: Cache osxcross
        if: matrix.os == 'apple-darwin'
        uses: actions/cache@v3
        id: osxcrossCache
        with:
          path: ${{ runner.temp }}/osxcross
          key: osxcross-${{ runner.os }}-${{ env.SDK_VERSION }}
      - name: Set osxcross env
        if: matrix.os == 'apple-darwin'
        run: |
          set -euo pipefail

          echo "$OSXCROSS_PATH/target/bin" >> "$GITHUB_PATH"
          echo "CC_$(echo '${{ matrix.arch }}_${{ matrix.os }}' | tr '-' '_')"="$(find "$OSXCROSS_PATH/target/bin" -name '${{ matrix.arch }}-apple-darwin*-clang' -exec basename {} \;)" >> $GITHUB_ENV
          echo "CARGO_TARGET_$(echo '${{ matrix.arch }}' | tr '[:lower:]' '[:upper:]')_APPLE_DARWIN_LINKER=$(find "$OSXCROSS_PATH/target/bin" -name '${{ matrix.arch }}-apple-darwin*-clang' -exec basename {} \;)" >> $GITHUB_ENV
          echo "CARGO_TARGET_$(echo '${{ matrix.arch }}' | tr '[:lower:]' '[:upper:]')_APPLE_DARWIN_RUSTFLAGS=-Car=$(find "$OSXCROSS_PATH/target/bin" -name '${{ matrix.arch }}-apple-darwin*-ar' -exec basename {} \;),-Clink-arg=-undefined,-Clink-arg=dynamic_lookup" >> $GITHUB_ENV
        env:
          OSXCROSS_PATH: ${{ runner.temp }}/osxcross
      - name: Set aarch64-unknown-linux-gnu env
        if: matrix.arch == 'aarch64' && matrix.os == 'unknown-linux-gnu'
        run: |
          set -euo pipefail

          sudo apt-get update && sudo apt-get install -y g++-aarch64-linux-gnu
          echo "CARGO_TARGET_$(echo '${{ matrix.arch }}' | tr '[:lower:]' '[:upper:]')_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.arch }}-${{ matrix.os }}
      - name: Upload to release
        run: |
          set -euo pipefail

          curl \
            -H 'accept: application/vnd.github+json' \
            -H 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
            -H 'content-type: application/octet-stream' \
            --data-binary "@$(find target/*/release/cloudformatious)" \
            --fail \
            "$(echo '${{ github.event.release.upload_url }}' | sed "s/{?name,label}/?name=$ASSET_NAME/")"
        env:
          ASSET_NAME: cloudformatious-${{ matrix.arch }}-${{ matrix.os }}
